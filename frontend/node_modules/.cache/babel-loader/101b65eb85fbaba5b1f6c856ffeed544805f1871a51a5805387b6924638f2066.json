{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjaeho/Desktop/project/Order/frontend/src/molecules/Tap/index.tsx\";\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { theme } from '../../utills/styles';\nimport Button from '../../atoms/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tap = ({\n  id,\n  category,\n  onClickCategory,\n  active,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TabWrapper, {\n      active: active,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        \"data-id\": id,\n        style: {\n          backgroundColor: 'white',\n          height: '80px',\n          minWidth: '240px'\n        },\n        onClick: onClickCategory,\n        ...props,\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Tap;\nconst TabWrapper = styled.div`\n  border-bottom: solid 3px\n    ${({\n  active\n}) => active ? `${theme.TITLE_ACTIVE}` : `${theme.LINE}`};\n`;\n_c2 = TabWrapper;\nexport default _c3 = /*#__PURE__*/React.memo(Tap);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Tap\");\n$RefreshReg$(_c2, \"TabWrapper\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["styled","React","theme","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Tap","id","category","onClickCategory","active","props","children","TabWrapper","style","backgroundColor","height","minWidth","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","TITLE_ACTIVE","LINE","_c2","_c3","memo","$RefreshReg$"],"sources":["/Users/jeongjaeho/Desktop/project/Order/frontend/src/molecules/Tap/index.tsx"],"sourcesContent":["import styled from '@emotion/styled'\nimport React from 'react'\nimport { theme } from '../../utills/styles'\nimport Button from '../../atoms/Button'\n\ninterface ActiveProps {\n    active: boolean\n}\ninterface TabWrapperProps extends ActiveProps {\n    id: number\n    category: string\n    onClickCategory(event: React.MouseEvent<HTMLButtonElement>): void\n}\n   \nconst Tap: React.FC<TabWrapperProps>= ({\n    id,\n  category,\n  onClickCategory,\n  active,\n  ...props\n}) => {\n  return (\n    <>\n      <TabWrapper active={active}>\n        <Button\n        data-id={id}\n          style={{\n            backgroundColor: 'white',\n            height: '80px',\n            minWidth: '240px',\n          }}\n          onClick={onClickCategory}\n          {...props}>\n          {category}\n\n        </Button>\n\n\n      </TabWrapper>\n    </>\n  )\n}\nconst TabWrapper = styled.div`\n  border-bottom: solid 3px\n    ${({ active }: ActiveProps) =>\n      active ? `${theme.TITLE_ACTIVE}` : `${theme.LINE}`};\n`\nexport default React.memo(Tap)\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,iBAAiB;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,qBAAqB;AAC3C,OAAOC,MAAM,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAWvC,MAAMC,GAA8B,GAAEA,CAAC;EACnCC,EAAE;EACJC,QAAQ;EACRC,eAAe;EACfC,MAAM;EACN,GAAGC;AACL,CAAC,KAAK;EACJ,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA,CAACU,UAAU;MAACH,MAAM,EAAEA,MAAO;MAAAE,QAAA,eACzBT,OAAA,CAACF,MAAM;QACP,WAASM,EAAG;QACVO,KAAK,EAAE;UACLC,eAAe,EAAE,OAAO;UACxBC,MAAM,EAAE,MAAM;UACdC,QAAQ,EAAE;QACZ,CAAE;QACFC,OAAO,EAAET,eAAgB;QAAA,GACrBE,KAAK;QAAAC,QAAA,EACRJ;MAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGC;EAAC,gBACb,CAAC;AAEP,CAAC;AAAAC,EAAA,GA3BKjB,GAA8B;AA4BpC,MAAMO,UAAU,GAAGf,MAAM,CAAC0B,GAAI;AAC9B;AACA,MAAM,CAAC;EAAEd;AAAoB,CAAC,KACxBA,MAAM,GAAI,GAAEV,KAAK,CAACyB,YAAa,EAAC,GAAI,GAAEzB,KAAK,CAAC0B,IAAK,EAAE;AACzD,CAAC;AAAAC,GAAA,GAJKd,UAAU;AAKhB,eAAAe,GAAA,gBAAe7B,KAAK,CAAC8B,IAAI,CAACvB,GAAG,CAAC;AAAA,IAAAiB,EAAA,EAAAI,GAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}