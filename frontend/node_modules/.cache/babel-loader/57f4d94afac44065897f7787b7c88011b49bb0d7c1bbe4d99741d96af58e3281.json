{"ast":null,"code":"import { create } from \"zustand\";\nconst useOrderStore = create(set => ({\n  productName: \"\",\n  productSize: \"\",\n  productTemp: \"\",\n  setProductName: productName => set(state => ({\n    ...state,\n    productName\n  })),\n  setProductSize: productSize => set(state => ({\n    ...state,\n    productSize\n  })),\n  setProductTemp: productTemp => set(state => ({\n    ...state,\n    productTemp\n  })),\n  setProduct: () => set(state => ({\n    ...state,\n    productSize: \"\",\n    productTemp: \"\"\n  })),\n  ㅁ\n}));\nexport default useOrderStore;\n\n// 수량 가격 \n//배열로 받든... 담기를누르면 카트에 또 담기를 누르면 기존거랑 새로 등록된거 \n//오늘 모든 버튼 구현 가격 증가 및 개수 전달 => 담기 하면 카트에 \n// 또한 카트에서 각 상품에 대한 총 가격 및 전체삭제 하나 삭제 \n// 스토어에 정보 있을경우 cart랜더링 \n// 메뉴선텍시에만  옵션랜더링\n// 담기를 눌러야 삭제 \n//시간 남으면 옵션랜더링부분에서 x 버튼 구현해서 state초기화","map":{"version":3,"names":["create","useOrderStore","set","productName","productSize","productTemp","setProductName","state","setProductSize","setProductTemp","setProduct","ㅁ"],"sources":["/Users/jeongjaeho/Desktop/project/Order/frontend/src/store/order.store.ts"],"sourcesContent":["import { create } from \"zustand\";\n\n\ninterface Orderstore{\n  \n    productName:string;\n    productSize:string;\n    productTemp:string;\n    setProductName:(productName:string)=>void;\n    setProductSize:(productSize:string)=>void;\n    setProductTemp:(productTemp:string)=>void;\n    setProduct:()=>void;\n    \n\n}\n\nconst useOrderStore=create<Orderstore>(set=>({\n   \n\n    productName: \"\",\n    productSize: \"\",\n    productTemp: \"\",\n    setProductName:(productName)=>set(state=>({...state,productName})),\n    setProductSize:(productSize)=>set(state=>({...state,productSize})),\n    setProductTemp:(productTemp)=>set(state=>({...state,productTemp})),\n    setProduct:()=>set(state=>({...state,productSize:\"\",productTemp:\"\"})),\n    \nㅁ\n}));\n\nexport default useOrderStore;\n\n// 수량 가격 \n//배열로 받든... 담기를누르면 카트에 또 담기를 누르면 기존거랑 새로 등록된거 \n//오늘 모든 버튼 구현 가격 증가 및 개수 전달 => 담기 하면 카트에 \n// 또한 카트에서 각 상품에 대한 총 가격 및 전체삭제 하나 삭제 \n// 스토어에 정보 있을경우 cart랜더링 \n// 메뉴선텍시에만  옵션랜더링\n// 담기를 눌러야 삭제 \n//시간 남으면 옵션랜더링부분에서 x 버튼 구현해서 state초기화 \n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAgBhC,MAAMC,aAAa,GAACD,MAAM,CAAaE,GAAG,KAAG;EAGzCC,WAAW,EAAE,EAAE;EACfC,WAAW,EAAE,EAAE;EACfC,WAAW,EAAE,EAAE;EACfC,cAAc,EAAEH,WAAW,IAAGD,GAAG,CAACK,KAAK,KAAG;IAAC,GAAGA,KAAK;IAACJ;EAAW,CAAC,CAAC,CAAC;EAClEK,cAAc,EAAEJ,WAAW,IAAGF,GAAG,CAACK,KAAK,KAAG;IAAC,GAAGA,KAAK;IAACH;EAAW,CAAC,CAAC,CAAC;EAClEK,cAAc,EAAEJ,WAAW,IAAGH,GAAG,CAACK,KAAK,KAAG;IAAC,GAAGA,KAAK;IAACF;EAAW,CAAC,CAAC,CAAC;EAClEK,UAAU,EAACA,CAAA,KAAIR,GAAG,CAACK,KAAK,KAAG;IAAC,GAAGA,KAAK;IAACH,WAAW,EAAC,EAAE;IAACC,WAAW,EAAC;EAAE,CAAC,CAAC,CAAC;EAEzEM;AACA,CAAC,CAAC,CAAC;AAEH,eAAeV,aAAa;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}