{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjaeho/Desktop/project/Order/frontend/src/Cart/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport useCartStore from '../store/cart.store';\nimport './style.css';\nimport Payment from '../Pay';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cart() {\n  _s();\n  const {\n    cartList\n  } = useCartStore();\n  const [payOpen, setPayOpen] = useState(false);\n\n  // 수량을 증가시키는 함수\n  const increaseQuantity = index => {\n    if (index >= 0 && index < cartList.length) {\n      const updatedCartList = [...cartList];\n      updatedCartList[index].productAmount++;\n      updatedCartList[index].newProductPrice = updatedCartList[index].productPrice * updatedCartList[index].productAmount;\n      // 업데이트된 카트 목록을 전역 상태에 적용\n      useCartStore.setState({\n        cartList: updatedCartList\n      });\n    } else {\n      console.error(\"Invalid index:\", index);\n    }\n  };\n\n  // 수량을 감소시키는 함수\n  const decreaseQuantity = index => {\n    if (index >= 0 && index < cartList.length) {\n      const updatedCartList = [...cartList];\n      if (updatedCartList[index].productAmount > 1) {\n        updatedCartList[index].productAmount--;\n        updatedCartList[index].newProductPrice = updatedCartList[index].productPrice * updatedCartList[index].productAmount;\n        // 업데이트된 카트 목록을 전역 상태에 적용\n        useCartStore.setState({\n          cartList: updatedCartList\n        });\n      }\n    } else {\n      console.error(\"Invalid index:\", index);\n    }\n  };\n\n  // 상품을  삭제하는 함수\n  const removeProduct = index => {\n    if (index >= 0 && index < cartList.length) {\n      const updatedCartList = cartList.filter((_, i) => i !== index);\n      // 업데이트된 카트 목록을 전역 상태에 적용\n      useCartStore.setState({\n        cartList: updatedCartList\n      });\n    } else {\n      console.error(\"Invalid index:\", index);\n    }\n  };\n  const payOpenHandler = () => {\n    setPayOpen(true);\n  };\n  // 총 수량 계산 함수\n  const calculateTotalQuantity = () => {\n    let totalQuantity = 0;\n    cartList.forEach(item => {\n      totalQuantity += item.productAmount;\n    });\n    return totalQuantity;\n  };\n  // 총가격 계산 함수\n  const calculateTotalPrice = () => {\n    let totalPrice = 0;\n    cartList.forEach(item => {\n      totalPrice += item.newProductPrice;\n    });\n    return totalPrice;\n  };\n  const cancelAllProducts = () => {\n    // 카트 목록을 빈 배열로 업데이트하여 전체 상품 취소\n    useCartStore.setState({\n      cartList: []\n    });\n  };\n  // 담긴 상품이 없으면 장바구니 랜더링 x\n  if (!cartList.length) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  const closePaymentModal = () => {\n    setPayOpen(false);\n  };\n  console.log(cartList);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart\",\n      children: [cartList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orderItems\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.productImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), item.productName, item.productSize && item.productTemperature && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [item.productTemperature, \"-\", item.productSize]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => decreaseQuantity(index),\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), item.productAmount, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => increaseQuantity(index),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeProduct(index),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.newProductPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 8\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orderButton\",\n          onClick: payOpenHandler,\n          children: \"\\uACB0\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"allCancelButton\",\n          onClick: cancelAllProducts,\n          children: \"\\uC804\\uCCB4 \\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }, this), payOpen && /*#__PURE__*/_jsxDEV(Payment, {\n          handleClosePaymentModal: closePaymentModal,\n          cartlist: cartList,\n          totalPrice: calculateTotalPrice()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Cart, \"ZEUjc0xmVdkjzMNOviwjsQL4bmg=\", false, function () {\n  return [useCartStore];\n});\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useCartStore","Payment","Fragment","_Fragment","jsxDEV","_jsxDEV","Cart","_s","cartList","payOpen","setPayOpen","increaseQuantity","index","length","updatedCartList","productAmount","newProductPrice","productPrice","setState","console","error","decreaseQuantity","removeProduct","filter","_","i","payOpenHandler","calculateTotalQuantity","totalQuantity","forEach","item","calculateTotalPrice","totalPrice","cancelAllProducts","closePaymentModal","log","children","className","map","src","productImage","fileName","_jsxFileName","lineNumber","columnNumber","productName","productSize","productTemperature","onClick","handleClosePaymentModal","cartlist","_c","$RefreshReg$"],"sources":["/Users/jeongjaeho/Desktop/project/Order/frontend/src/Cart/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport useCartStore from '../store/cart.store';\nimport './style.css';\nimport Payment from '../Pay';\n\n\nfunction Cart() {\n  const { cartList } = useCartStore();\n  const[payOpen,setPayOpen]=useState(false)\n\n  // 수량을 증가시키는 함수\n  const increaseQuantity = (index:number) => {\n    if (index >= 0 && index < cartList.length) {\n      const updatedCartList = [...cartList];\n      updatedCartList[index].productAmount++;\n      updatedCartList[index].newProductPrice = updatedCartList[index].productPrice * updatedCartList[index].productAmount;\n      // 업데이트된 카트 목록을 전역 상태에 적용\n      useCartStore.setState({ cartList: updatedCartList });\n    } else {\n      console.error(\"Invalid index:\", index);\n    }\n  };\n\n  // 수량을 감소시키는 함수\n  const decreaseQuantity = (index:number) => {\n    if (index >= 0 && index < cartList.length) {\n      const updatedCartList = [...cartList];\n      if (updatedCartList[index].productAmount > 1) {\n        updatedCartList[index].productAmount--;\n        updatedCartList[index].newProductPrice = updatedCartList[index].productPrice * updatedCartList[index].productAmount;\n        // 업데이트된 카트 목록을 전역 상태에 적용\n        useCartStore.setState({ cartList: updatedCartList });\n      }\n    } else {\n      console.error(\"Invalid index:\", index);\n    }\n  };\n\n  // 상품을  삭제하는 함수\n  const removeProduct = (index:number) => {\n    if (index >= 0 && index < cartList.length) {\n      const updatedCartList = cartList.filter((_, i) => i !== index);\n      // 업데이트된 카트 목록을 전역 상태에 적용\n      useCartStore.setState({ cartList: updatedCartList });\n    } else {\n      console.error(\"Invalid index:\", index);\n    }\n  };\nconst payOpenHandler=()=>{\n  setPayOpen(true);\n}\n// 총 수량 계산 함수\nconst calculateTotalQuantity = () => {\n  let totalQuantity = 0;\n  cartList.forEach(item => {\n    totalQuantity += item.productAmount;\n  });\n  return totalQuantity;\n};\n  // 총가격 계산 함수\nconst calculateTotalPrice = () => {\n  let totalPrice = 0;\n  cartList.forEach(item => {\n\n    totalPrice += item.newProductPrice;\n  });\n  return totalPrice;\n};\n\n  const cancelAllProducts = () => {\n    // 카트 목록을 빈 배열로 업데이트하여 전체 상품 취소\n    useCartStore.setState({ cartList: [] });\n  };\n// 담긴 상품이 없으면 장바구니 랜더링 x\n  if(!cartList.length) {\n       return(\n        <></>\n\n       );}\n\n const closePaymentModal = () => {\n        setPayOpen(false);\n  };\n\n  console.log(cartList);\n  return (\n      \n    <>\n   \n    <div className='cart'>\n      {cartList.map((item, index) => (\n       <div className='orderItems' key={index}>\n          <img src={item.productImage} />\n          {item.productName}\n          {item.productSize &&item.productTemperature &&(\n          <div>{item.productTemperature}-{item.productSize}</div>\n          )}       \n        <div>\n            <button onClick={() => decreaseQuantity(index)}>-</button>\n            {item.productAmount}\n            <button onClick={() => increaseQuantity(index)}>+</button>\n            <button onClick={() => removeProduct(index)}>X</button> {/* 삭제 버튼 */}\n            <div>{item.newProductPrice}</div>\n        </div>\n        </div>\n      ))}\n     \n       \n      \n      <div className='buttons'>\n      <div className='orderButton' onClick={payOpenHandler}>결제</div>\n      <div className='allCancelButton' onClick={cancelAllProducts}>전체 취소</div>\n      {payOpen&&(\n      <Payment \n      handleClosePaymentModal={closePaymentModal}\n      cartlist={cartList}\n      totalPrice={calculateTotalPrice()} \n      />\n      )}\n      </div>\n      \n    </div>\n    \n    </>\n  );\n}\n\nexport default Cart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}