{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjaeho/Desktop/project/Order/frontend/src/Cart/index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport useCartStore from '../store/cart.store';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Cart() {\n  _s();\n  const {\n    cartList\n  } = useCartStore();\n\n  // 수량을 증가시키는 함수\n  const increaseQuantity = index => {\n    if (index >= 0 && index < cartList.length) {\n      const updatedCartList = [...cartList];\n      updatedCartList[index].productAmount++;\n      updatedCartList[index].newProductPrice = updatedCartList[index].productPrice * updatedCartList[index].productAmount;\n      // 업데이트된 카트 목록을 전역 상태에 적용\n      useCartStore.setState({\n        cartList: updatedCartList\n      });\n    } else {\n      console.error(\"Invalid index:\", index);\n    }\n  };\n\n  // 수량을 감소시키는 함수\n  const decreaseQuantity = index => {\n    if (index >= 0 && index < cartList.length) {\n      const updatedCartList = [...cartList];\n      if (updatedCartList[index].productAmount > 1) {\n        updatedCartList[index].productAmount--;\n        updatedCartList[index].newProductPrice = updatedCartList[index].productPrice * updatedCartList[index].productAmount;\n        // 업데이트된 카트 목록을 전역 상태에 적용\n        useCartStore.setState({\n          cartList: updatedCartList\n        });\n      }\n    } else {\n      console.error(\"Invalid index:\", index);\n    }\n  };\n\n  // 상품을  삭제하는 함수\n  const removeProduct = index => {\n    if (index >= 0 && index < cartList.length) {\n      const updatedCartList = cartList.filter((_, i) => i !== index);\n      // 업데이트된 카트 목록을 전역 상태에 적용\n      useCartStore.setState({\n        cartList: updatedCartList\n      });\n    } else {\n      console.error(\"Invalid index:\", index);\n    }\n  };\n\n  // 총가격 계산 함수\n  const calculateTotalPrice = () => {\n    let totalPrice = 0;\n    cartList.forEach(item => {\n      totalPrice += item.newProductPrice;\n    });\n    return totalPrice;\n  };\n  const cancelAllProducts = () => {\n    // 카트 목록을 빈 배열로 업데이트하여 전체 상품 취소\n    useCartStore.setState({\n      cartList: []\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [cartList, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart\",\n      children: [cartList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orderItems\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.productImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), item.productName, item.productTemperature && item.productTemperature && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uC635\\uC158:\", item.productTemperature, \"\\uC0AC\\uC774\\uC988:\", item.productSize]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => decreaseQuantity(index),\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), item.productAmount, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => increaseQuantity(index),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeProduct(index),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.newProductPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 8\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail\",\n        children: [\"\\uCD1D\\uC218\\uB7C9: \", cartList.length, \"\\uCD1D\\uAC00\\uACA9: \", calculateTotalPrice()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"allCancelButton\",\n          onClick: cancelAllProducts,\n          children: \"\\uC804\\uCCB4 \\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orderButton\",\n          children: \"\\uACB0\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Cart, \"hVvG0HMmqC6ruw7X7TqZ7tqhkE8=\", false, function () {\n  return [useCartStore];\n});\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useCartStore","jsxDEV","_jsxDEV","Fragment","_Fragment","Cart","_s","cartList","increaseQuantity","index","length","updatedCartList","productAmount","newProductPrice","productPrice","setState","console","error","decreaseQuantity","removeProduct","filter","_","i","calculateTotalPrice","totalPrice","forEach","item","cancelAllProducts","children","className","map","src","productImage","fileName","_jsxFileName","lineNumber","columnNumber","productName","productTemperature","productSize","onClick","_c","$RefreshReg$"],"sources":["/Users/jeongjaeho/Desktop/project/Order/frontend/src/Cart/index.tsx"],"sourcesContent":["import React from 'react';\nimport useCartStore from '../store/cart.store';\nimport './style.css';\nfunction Cart() {\n  const { cartList } = useCartStore();\n\n  // 수량을 증가시키는 함수\n  const increaseQuantity = (index:number) => {\n    if (index >= 0 && index < cartList.length) {\n      const updatedCartList = [...cartList];\n      updatedCartList[index].productAmount++;\n      updatedCartList[index].newProductPrice = updatedCartList[index].productPrice * updatedCartList[index].productAmount;\n      // 업데이트된 카트 목록을 전역 상태에 적용\n      useCartStore.setState({ cartList: updatedCartList });\n    } else {\n      console.error(\"Invalid index:\", index);\n    }\n  };\n\n  // 수량을 감소시키는 함수\n  const decreaseQuantity = (index:number) => {\n    if (index >= 0 && index < cartList.length) {\n      const updatedCartList = [...cartList];\n      if (updatedCartList[index].productAmount > 1) {\n        updatedCartList[index].productAmount--;\n        updatedCartList[index].newProductPrice = updatedCartList[index].productPrice * updatedCartList[index].productAmount;\n        // 업데이트된 카트 목록을 전역 상태에 적용\n        useCartStore.setState({ cartList: updatedCartList });\n      }\n    } else {\n      console.error(\"Invalid index:\", index);\n    }\n  };\n\n  // 상품을  삭제하는 함수\n  const removeProduct = (index:number) => {\n    if (index >= 0 && index < cartList.length) {\n      const updatedCartList = cartList.filter((_, i) => i !== index);\n      // 업데이트된 카트 목록을 전역 상태에 적용\n      useCartStore.setState({ cartList: updatedCartList });\n    } else {\n      console.error(\"Invalid index:\", index);\n    }\n  };\n\n  // 총가격 계산 함수\nconst calculateTotalPrice = () => {\n  let totalPrice = 0;\n  cartList.forEach(item => {\n\n    totalPrice += item.newProductPrice;\n  });\n  return totalPrice;\n};\n\n  const cancelAllProducts = () => {\n    // 카트 목록을 빈 배열로 업데이트하여 전체 상품 취소\n    useCartStore.setState({ cartList: [] });\n  };\n  return (\n\n    <>\n    {cartList}\n    <div className='cart'>\n      {cartList.map((item, index) => (\n       <div className='orderItems' key={index}>\n          <img src={item.productImage} />\n          {item.productName}\n          {item.productTemperature &&item.productTemperature &&(\n          <div>옵션:{item.productTemperature}사이즈:{item.productSize}</div>\n          )}       \n        <div>\n            <button onClick={() => decreaseQuantity(index)}>-</button>\n            {item.productAmount}\n            <button onClick={() => increaseQuantity(index)}>+</button>\n            <button onClick={() => removeProduct(index)}>X</button> {/* 삭제 버튼 */}\n            <div>{item.newProductPrice}</div>\n        </div>\n        </div>\n      ))}\n      <div className='detail'>\n        총수량: {cartList.length}\n        총가격: {calculateTotalPrice()}\n      </div>\n\n      <div className='buttons'>\n        <div className='allCancelButton' onClick={cancelAllProducts}>전체 취소</div>\n        <div className='orderButton'>결제</div>\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default Cart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}