{"ast":null,"code":"import { create } from \"zustand\";\nconst useCartStore = create(set => ({\n  cartList: [],\n  // addToCart 메서드 구현\n  addToCart: item => {\n    set(state => {\n      const existingItemIndex = state.cartList.findIndex(cartItem => cartItem.productId === item.productId && cartItem.productSize === item.productSize && cartItem.productTemperature === item.productTemperature);\n      if (existingItemIndex !== -1) {\n        // If item already exists, update the quantity\n        const updatedCartList = [...state.cartList];\n        updatedCartList[existingItemIndex].productAmount += item.productAmount;\n        return {\n          cartList: updatedCartList\n        };\n      } else {\n        // If item does not exist, add new item to cart\n        return {\n          cartList: [...state.cartList, item]\n        };\n      }\n    });\n  }\n}));\nexport default useCartStore;","map":{"version":3,"names":["create","useCartStore","set","cartList","addToCart","item","state","existingItemIndex","findIndex","cartItem","productId","productSize","productTemperature","updatedCartList","productAmount"],"sources":["/Users/jeongjaeho/Desktop/project/Order/frontend/src/store/cart.store.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport Cart from \"../Types/Interface/CartList.Interface\";\n\n\ninterface cartstore{\n  \n    cartList:Cart[];\n    \n    addToCart: (item: Cart) => void;\n    \n\n}\n\nconst useCartStore = create<cartstore>((set) => ({\n    cartList: [],\n  \n    // addToCart 메서드 구현\n    addToCart: (item) => {\n      set((state) => {\n        const existingItemIndex = state.cartList.findIndex(\n          (cartItem) =>\n            cartItem.productId === item.productId &&\n            cartItem.productSize === item.productSize &&\n            cartItem.productTemperature === item.productTemperature\n        );\n  \n        if (existingItemIndex !== -1) {\n          // If item already exists, update the quantity\n          const updatedCartList = [...state.cartList];\n          updatedCartList[existingItemIndex].productAmount += item.productAmount;\n          \n          return { cartList: updatedCartList };\n        } else {\n          // If item does not exist, add new item to cart\n          return { cartList: [...state.cartList, item] };\n        }\n      });\n    },\n  }));\n  \n  export default useCartStore;\n  \n\n\n\n\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAahC,MAAMC,YAAY,GAAGD,MAAM,CAAaE,GAAG,KAAM;EAC7CC,QAAQ,EAAE,EAAE;EAEZ;EACAC,SAAS,EAAGC,IAAI,IAAK;IACnBH,GAAG,CAAEI,KAAK,IAAK;MACb,MAAMC,iBAAiB,GAAGD,KAAK,CAACH,QAAQ,CAACK,SAAS,CAC/CC,QAAQ,IACPA,QAAQ,CAACC,SAAS,KAAKL,IAAI,CAACK,SAAS,IACrCD,QAAQ,CAACE,WAAW,KAAKN,IAAI,CAACM,WAAW,IACzCF,QAAQ,CAACG,kBAAkB,KAAKP,IAAI,CAACO,kBACzC,CAAC;MAED,IAAIL,iBAAiB,KAAK,CAAC,CAAC,EAAE;QAC5B;QACA,MAAMM,eAAe,GAAG,CAAC,GAAGP,KAAK,CAACH,QAAQ,CAAC;QAC3CU,eAAe,CAACN,iBAAiB,CAAC,CAACO,aAAa,IAAIT,IAAI,CAACS,aAAa;QAEtE,OAAO;UAAEX,QAAQ,EAAEU;QAAgB,CAAC;MACtC,CAAC,MAAM;QACL;QACA,OAAO;UAAEV,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAQ,EAAEE,IAAI;QAAE,CAAC;MAChD;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC,CAAC;AAEH,eAAeJ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}