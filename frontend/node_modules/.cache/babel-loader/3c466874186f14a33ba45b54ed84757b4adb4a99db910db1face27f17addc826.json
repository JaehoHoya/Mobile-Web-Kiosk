{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjaeho/Desktop/project/Order/frontend/src/Navbar/CategoryNavbar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styles from './style.module.css';\nimport CategoryButton from './CategoryButton';\nimport useSpeechToText from '../Speech';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CategoryNavbar({\n  categories,\n  handleCategoryClick,\n  activeCategoryId\n}) {\n  _s();\n  const {\n    transcript,\n    listening,\n    toggleListening\n  } = useSpeechToText(); // 음성 인식에 필요한 상태와 함수 가져오기\n\n  useEffect(() => {\n    // 음성 인식 결과가 변할 때마다 카테고리를 검사하여 일치하는 카테고리를 찾음\n    const matchedCategory = categories.find(category => category.categoryName === transcript);\n    if (matchedCategory) {\n      handleCategoryClick(matchedCategory.categoryId); // 일치하는 카테고리를 클릭하는 함수 호출\n    }\n  }, [categories, transcript, handleCategoryClick]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.CategoryWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.CategoryTitle,\n        children: \"\\uAC1C\\uBC1C\\uC790 \\uD0A4\\uC624\\uC2A4\\uD06C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleListening,\n        children: listening ? '음성인식 중지' : '음성인식 시작'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.categoryNavbar,\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(CategoryButton, {\n        categoryId: category.categoryId,\n        categoryName: category.categoryName,\n        isActive: category.categoryId === activeCategoryId,\n        onClick: () => handleCategoryClick(category.categoryId) // 클릭 핸들러\n      }, category.categoryId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CategoryNavbar, \"xw4bhyu8HhVDNKxM+EXlLWkXM9Q=\", false, function () {\n  return [useSpeechToText];\n});\n_c = CategoryNavbar;\nvar _c;\n$RefreshReg$(_c, \"CategoryNavbar\");","map":{"version":3,"names":["React","useEffect","styles","CategoryButton","useSpeechToText","jsxDEV","_jsxDEV","Fragment","_Fragment","CategoryNavbar","categories","handleCategoryClick","activeCategoryId","_s","transcript","listening","toggleListening","matchedCategory","find","category","categoryName","categoryId","children","className","CategoryWrapper","CategoryTitle","fileName","_jsxFileName","lineNumber","columnNumber","onClick","categoryNavbar","map","isActive","_c","$RefreshReg$"],"sources":["/Users/jeongjaeho/Desktop/project/Order/frontend/src/Navbar/CategoryNavbar.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from './style.module.css';\nimport CategoryButton from './CategoryButton';\nimport useSpeechToText from '../Speech';\n\ninterface CategoryNavbarProps {\n  categories: { categoryId: number; categoryName: string }[];\n  handleCategoryClick: (categoryId: number) => void;\n  activeCategoryId: number;\n}\n\nexport default function CategoryNavbar({ categories, handleCategoryClick, activeCategoryId }: CategoryNavbarProps) {\n  const { transcript, listening, toggleListening } = useSpeechToText(); // 음성 인식에 필요한 상태와 함수 가져오기\n\n  useEffect(() => {\n    // 음성 인식 결과가 변할 때마다 카테고리를 검사하여 일치하는 카테고리를 찾음\n    const matchedCategory = categories.find(category => category.categoryName === transcript);\n    if (matchedCategory) {\n      handleCategoryClick(matchedCategory.categoryId); // 일치하는 카테고리를 클릭하는 함수 호출\n    }\n  }, [categories, transcript, handleCategoryClick]);\n\n  return (\n    <>\n      <div className={styles.CategoryWrapper}>\n        <div className={styles.CategoryTitle}>개발자 키오스크</div>\n        {/* 음성 인식 시작/중지 버튼 */}\n        <button onClick={toggleListening}>\n          {listening ? '음성인식 중지' : '음성인식 시작'}\n        </button>\n      </div>\n      <div className={styles.categoryNavbar}>\n        {categories.map(category => (\n          <CategoryButton\n            key={category.categoryId}\n            categoryId={category.categoryId}\n            categoryName={category.categoryName}\n            isActive={category.categoryId === activeCategoryId}\n            onClick={() => handleCategoryClick(category.categoryId)} // 클릭 핸들러\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAkB,OAAO;AAClD,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,eAAe,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAQxC,eAAe,SAASC,cAAcA,CAAC;EAAEC,UAAU;EAAEC,mBAAmB;EAAEC;AAAsC,CAAC,EAAE;EAAAC,EAAA;EACjH,MAAM;IAAEC,UAAU;IAAEC,SAAS;IAAEC;EAAgB,CAAC,GAAGZ,eAAe,CAAC,CAAC,CAAC,CAAC;;EAEtEH,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,eAAe,GAAGP,UAAU,CAACQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,YAAY,KAAKN,UAAU,CAAC;IACzF,IAAIG,eAAe,EAAE;MACnBN,mBAAmB,CAACM,eAAe,CAACI,UAAU,CAAC,CAAC,CAAC;IACnD;EACF,CAAC,EAAE,CAACX,UAAU,EAAEI,UAAU,EAAEH,mBAAmB,CAAC,CAAC;EAEjD,oBACEL,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACEhB,OAAA;MAAKiB,SAAS,EAAErB,MAAM,CAACsB,eAAgB;MAAAF,QAAA,gBACrChB,OAAA;QAAKiB,SAAS,EAAErB,MAAM,CAACuB,aAAc;QAAAH,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEpDvB,OAAA;QAAQwB,OAAO,EAAEd,eAAgB;QAAAM,QAAA,EAC9BP,SAAS,GAAG,SAAS,GAAG;MAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNvB,OAAA;MAAKiB,SAAS,EAAErB,MAAM,CAAC6B,cAAe;MAAAT,QAAA,EACnCZ,UAAU,CAACsB,GAAG,CAACb,QAAQ,iBACtBb,OAAA,CAACH,cAAc;QAEbkB,UAAU,EAAEF,QAAQ,CAACE,UAAW;QAChCD,YAAY,EAAED,QAAQ,CAACC,YAAa;QACpCa,QAAQ,EAAEd,QAAQ,CAACE,UAAU,KAAKT,gBAAiB;QACnDkB,OAAO,EAAEA,CAAA,KAAMnB,mBAAmB,CAACQ,QAAQ,CAACE,UAAU,CAAE,CAAC;MAAA,GAJpDF,QAAQ,CAACE,UAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKzB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP;AAAChB,EAAA,CAjCuBJ,cAAc;EAAA,QACeL,eAAe;AAAA;AAAA8B,EAAA,GAD5CzB,cAAc;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}