{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjaeho/Desktop/project/Order/frontend/src/Navbar/CategoryNavbar.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styles from './style.module.css';\nimport CategoryButton from './CategoryButton';\nimport useSpeechToText from '../Speech';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CategoryNavbar({\n  categories,\n  handleCategoryClick,\n  activeCategoryId\n}) {\n  _s();\n  useEffect(() => {\n    // categories 배열이 비어있지 않은 경우에만 첫 번째 카테고리의 상품을 표시\n    if (categories.length > 0) {\n      handleCategoryClick(categories[0].categoryId);\n    }\n  }, [categories]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.CategoryWrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.CategoryTitle,\n        children: \"\\uAC1C\\uBC1C\\uC790 \\uD0A4\\uC624\\uC2A4\\uD06C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.categoryNavbar,\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(CategoryButton, {\n        categoryId: category.categoryId,\n        categoryName: category.categoryName,\n        isActive: category.categoryId === activeCategoryId,\n        onclick: () => handleCategoryClick(category.categoryId)\n      }, category.categoryId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n// 두 번째 CategoryNavbar 컴포넌트에서 음성 인식을 사용하여 해당 카테고리 버튼을 누르게 함\n_s(CategoryNavbar, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CategoryNavbar;\nexport function CategoryNavbarWithSpeechRecognition({\n  categories,\n  handleCategoryClick,\n  activeCategoryId\n}) {\n  _s2();\n  const {\n    transcript\n  } = useSpeechToText();\n  useEffect(() => {\n    const matchedCategory = categories.find(category => category.categoryName === transcript);\n    if (matchedCategory) {\n      handleCategoryClick(matchedCategory.categoryId);\n    }\n  }, [categories, transcript, handleCategoryClick]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.CategoryWrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.CategoryTitle,\n        children: \"\\uAC1C\\uBC1C\\uC790 \\uD0A4\\uC624\\uC2A4\\uD06C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.categoryNavbar,\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(CategoryButton, {\n        categoryId: category.categoryId,\n        categoryName: category.categoryName,\n        isActive: category.categoryId === activeCategoryId,\n        onclick: () => handleCategoryClick(category.categoryId)\n      }, category.categoryId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s2(CategoryNavbarWithSpeechRecognition, \"nZ2ElokTerQp785AyG9nuE34cKI=\", false, function () {\n  return [useSpeechToText];\n});\n_c2 = CategoryNavbarWithSpeechRecognition;\nvar _c, _c2;\n$RefreshReg$(_c, \"CategoryNavbar\");\n$RefreshReg$(_c2, \"CategoryNavbarWithSpeechRecognition\");","map":{"version":3,"names":["React","useEffect","styles","CategoryButton","useSpeechToText","jsxDEV","_jsxDEV","Fragment","_Fragment","CategoryNavbar","categories","handleCategoryClick","activeCategoryId","_s","length","categoryId","children","className","CategoryWrapper","CategoryTitle","fileName","_jsxFileName","lineNumber","columnNumber","categoryNavbar","map","category","categoryName","isActive","onclick","_c","CategoryNavbarWithSpeechRecognition","_s2","transcript","matchedCategory","find","_c2","$RefreshReg$"],"sources":["/Users/jeongjaeho/Desktop/project/Order/frontend/src/Navbar/CategoryNavbar.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport styles from './style.module.css';\nimport CategoryButton from './CategoryButton';\nimport useSpeechToText from '../Speech';\n\ninterface CategoryNavbarProps {\n  categories: { categoryId: number; categoryName: string }[];\n  handleCategoryClick: (categoryId: number) => void;\n  activeCategoryId: number;\n}\n\nexport default function CategoryNavbar({ categories, handleCategoryClick, activeCategoryId }: CategoryNavbarProps) {\n  useEffect(() => {\n    // categories 배열이 비어있지 않은 경우에만 첫 번째 카테고리의 상품을 표시\n    if (categories.length > 0) {\n      handleCategoryClick(categories[0].categoryId);\n    }\n  }, [categories]);\n\n  return (\n    <>\n      <div className={styles.CategoryWrapper}>\n        <div className={styles.CategoryTitle}>개발자 키오스크</div>\n      </div>\n      <div className={styles.categoryNavbar}>\n        {categories.map(category => (\n          <CategoryButton\n            key={category.categoryId}\n            categoryId={category.categoryId}\n            categoryName={category.categoryName}\n            isActive={category.categoryId === activeCategoryId}\n            onclick={() => handleCategoryClick(category.categoryId)}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n\n// 두 번째 CategoryNavbar 컴포넌트에서 음성 인식을 사용하여 해당 카테고리 버튼을 누르게 함\nexport function CategoryNavbarWithSpeechRecognition({ categories, handleCategoryClick, activeCategoryId }: CategoryNavbarProps) {\n  const { transcript } = useSpeechToText();\n\n  useEffect(() => {\n    const matchedCategory = categories.find(category => category.categoryName === transcript);\n    if (matchedCategory) {\n      handleCategoryClick(matchedCategory.categoryId);\n    }\n  }, [categories, transcript, handleCategoryClick]);\n\n  return (\n    <>\n      <div className={styles.CategoryWrapper}>\n        <div className={styles.CategoryTitle}>개발자 키오스크</div>\n      </div>\n      <div className={styles.categoryNavbar}>\n        {categories.map(category => (\n          <CategoryButton\n            key={category.categoryId}\n            categoryId={category.categoryId}\n            categoryName={category.categoryName}\n            isActive={category.categoryId === activeCategoryId}\n            onclick={() => handleCategoryClick(category.categoryId)}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,eAAe,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAQxC,eAAe,SAASC,cAAcA,CAAC;EAAEC,UAAU;EAAEC,mBAAmB;EAAEC;AAAsC,CAAC,EAAE;EAAAC,EAAA;EACjHZ,SAAS,CAAC,MAAM;IACd;IACA,IAAIS,UAAU,CAACI,MAAM,GAAG,CAAC,EAAE;MACzBH,mBAAmB,CAACD,UAAU,CAAC,CAAC,CAAC,CAACK,UAAU,CAAC;IAC/C;EACF,CAAC,EAAE,CAACL,UAAU,CAAC,CAAC;EAEhB,oBACEJ,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACEV,OAAA;MAAKW,SAAS,EAAEf,MAAM,CAACgB,eAAgB;MAAAF,QAAA,eACrCV,OAAA;QAAKW,SAAS,EAAEf,MAAM,CAACiB,aAAc;QAAAH,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACNjB,OAAA;MAAKW,SAAS,EAAEf,MAAM,CAACsB,cAAe;MAAAR,QAAA,EACnCN,UAAU,CAACe,GAAG,CAACC,QAAQ,iBACtBpB,OAAA,CAACH,cAAc;QAEbY,UAAU,EAAEW,QAAQ,CAACX,UAAW;QAChCY,YAAY,EAAED,QAAQ,CAACC,YAAa;QACpCC,QAAQ,EAAEF,QAAQ,CAACX,UAAU,KAAKH,gBAAiB;QACnDiB,OAAO,EAAEA,CAAA,KAAMlB,mBAAmB,CAACe,QAAQ,CAACX,UAAU;MAAE,GAJnDW,QAAQ,CAACX,UAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKzB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP;;AAEA;AAAAV,EAAA,CA5BwBJ,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AA6BtC,OAAO,SAASsB,mCAAmCA,CAAC;EAAErB,UAAU;EAAEC,mBAAmB;EAAEC;AAAsC,CAAC,EAAE;EAAAoB,GAAA;EAC9H,MAAM;IAAEC;EAAW,CAAC,GAAG7B,eAAe,CAAC,CAAC;EAExCH,SAAS,CAAC,MAAM;IACd,MAAMiC,eAAe,GAAGxB,UAAU,CAACyB,IAAI,CAACT,QAAQ,IAAIA,QAAQ,CAACC,YAAY,KAAKM,UAAU,CAAC;IACzF,IAAIC,eAAe,EAAE;MACnBvB,mBAAmB,CAACuB,eAAe,CAACnB,UAAU,CAAC;IACjD;EACF,CAAC,EAAE,CAACL,UAAU,EAAEuB,UAAU,EAAEtB,mBAAmB,CAAC,CAAC;EAEjD,oBACEL,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACEV,OAAA;MAAKW,SAAS,EAAEf,MAAM,CAACgB,eAAgB;MAAAF,QAAA,eACrCV,OAAA;QAAKW,SAAS,EAAEf,MAAM,CAACiB,aAAc;QAAAH,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACNjB,OAAA;MAAKW,SAAS,EAAEf,MAAM,CAACsB,cAAe;MAAAR,QAAA,EACnCN,UAAU,CAACe,GAAG,CAACC,QAAQ,iBACtBpB,OAAA,CAACH,cAAc;QAEbY,UAAU,EAAEW,QAAQ,CAACX,UAAW;QAChCY,YAAY,EAAED,QAAQ,CAACC,YAAa;QACpCC,QAAQ,EAAEF,QAAQ,CAACX,UAAU,KAAKH,gBAAiB;QACnDiB,OAAO,EAAEA,CAAA,KAAMlB,mBAAmB,CAACe,QAAQ,CAACX,UAAU;MAAE,GAJnDW,QAAQ,CAACX,UAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKzB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP;AAACS,GAAA,CA5BeD,mCAAmC;EAAA,QAC1B3B,eAAe;AAAA;AAAAgC,GAAA,GADxBL,mCAAmC;AAAA,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}