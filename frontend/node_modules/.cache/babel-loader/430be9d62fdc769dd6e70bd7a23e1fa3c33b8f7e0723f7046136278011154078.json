{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjaeho/Desktop/project/Order/frontend/src/Navbar/CategoryNavbar.tsx\",\n  _s = $RefreshSig$();\n// CategoryNavbar.js\n\nimport React, { useEffect } from 'react';\nimport styles from './style.module.css';\nimport CategoryButton from './CategoryButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CategoryNavbar = ({\n  categories,\n  handleCategoryClick,\n  activeCategoryId\n}) => {\n  _s();\n  useEffect(() => {\n    // categories 배열이 비어있지 않은 경우에만 첫 번째 카테고리의 상품을 표시\n    if (categories.length > 0) {\n      handleCategoryClick(categories[0].categoryId);\n    }\n  }, [categories]);\n  useEffect(() => {\n    const words = transcript.split(' '); // 음성 입력을 공백을 기준으로 단어로 분리\n    const matchingCategory = categories.find(category => words.includes(category.categoryName));\n    if (matchingCategory) {\n      handleCategoryClick(matchingCategory.categoryId);\n      resetTranscript(); // 일치하는 카테고리 버튼이 눌렸을 때 음성값 초기화\n    }\n  }, [categories, handleCategoryClick]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.CategoryWrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.CategoryTitle,\n        children: \"\\uD558\\uB294\\uC911\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.categoryNavbar,\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(CategoryButton, {\n        categoryId: category.categoryId,\n        categoryName: category.categoryName,\n        isActive: category.categoryId === activeCategoryId,\n        onclick: () => handleCategoryClick(category.categoryId)\n      }, category.categoryId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CategoryNavbar, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n_c = CategoryNavbar;\nexport default CategoryNavbar;\nvar _c;\n$RefreshReg$(_c, \"CategoryNavbar\");","map":{"version":3,"names":["React","useEffect","styles","CategoryButton","jsxDEV","_jsxDEV","Fragment","_Fragment","CategoryNavbar","categories","handleCategoryClick","activeCategoryId","_s","length","categoryId","words","transcript","split","matchingCategory","find","category","includes","categoryName","resetTranscript","children","className","CategoryWrapper","CategoryTitle","fileName","_jsxFileName","lineNumber","columnNumber","categoryNavbar","map","isActive","onclick","_c","$RefreshReg$"],"sources":["/Users/jeongjaeho/Desktop/project/Order/frontend/src/Navbar/CategoryNavbar.tsx"],"sourcesContent":["// CategoryNavbar.js\n\nimport React, { useEffect } from 'react';\nimport styles from './style.module.css';\nimport CategoryButton from './CategoryButton';\n\n\ninterface CategoryNavbarProps {\n  categories: { categoryId: number; categoryName: string }[];\n  handleCategoryClick: (categoryId: number) => void;\n  activeCategoryId: number;\n}\n\nconst CategoryNavbar: React.FC<CategoryNavbarProps> = ({ categories, handleCategoryClick, activeCategoryId }) => {\n\n\n  useEffect(() => {\n    // categories 배열이 비어있지 않은 경우에만 첫 번째 카테고리의 상품을 표시\n    if (categories.length > 0) {\n      handleCategoryClick(categories[0].categoryId);\n    }\n  }, [categories]); \n\n  useEffect(() => {\n    const words = transcript.split(' '); // 음성 입력을 공백을 기준으로 단어로 분리\n    const matchingCategory = categories.find(category => words.includes(category.categoryName));\n    if (matchingCategory) {\n      handleCategoryClick(matchingCategory.categoryId);\n      resetTranscript(); // 일치하는 카테고리 버튼이 눌렸을 때 음성값 초기화\n    } \n  }, [categories, handleCategoryClick]);\n\n  return (\n    <>\n      <div className={styles.CategoryWrapper}>\n        <div className={styles.CategoryTitle}>하는중</div>\n        \n      </div>\n      <div className={styles.categoryNavbar}>\n        {categories.map(category => (\n          <CategoryButton\n            categoryId={category.categoryId}\n            categoryName={category.categoryName}\n            key={category.categoryId} \n            isActive={category.categoryId === activeCategoryId}\n            onclick={() => handleCategoryClick(category.categoryId)} \n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default CategoryNavbar;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAS9C,MAAMC,cAA6C,GAAGA,CAAC;EAAEC,UAAU;EAAEC,mBAAmB;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAG/GX,SAAS,CAAC,MAAM;IACd;IACA,IAAIQ,UAAU,CAACI,MAAM,GAAG,CAAC,EAAE;MACzBH,mBAAmB,CAACD,UAAU,CAAC,CAAC,CAAC,CAACK,UAAU,CAAC;IAC/C;EACF,CAAC,EAAE,CAACL,UAAU,CAAC,CAAC;EAEhBR,SAAS,CAAC,MAAM;IACd,MAAMc,KAAK,GAAGC,UAAU,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACrC,MAAMC,gBAAgB,GAAGT,UAAU,CAACU,IAAI,CAACC,QAAQ,IAAIL,KAAK,CAACM,QAAQ,CAACD,QAAQ,CAACE,YAAY,CAAC,CAAC;IAC3F,IAAIJ,gBAAgB,EAAE;MACpBR,mBAAmB,CAACQ,gBAAgB,CAACJ,UAAU,CAAC;MAChDS,eAAe,CAAC,CAAC,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACd,UAAU,EAAEC,mBAAmB,CAAC,CAAC;EAErC,oBACEL,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MAAKoB,SAAS,EAAEvB,MAAM,CAACwB,eAAgB;MAAAF,QAAA,eACrCnB,OAAA;QAAKoB,SAAS,EAAEvB,MAAM,CAACyB,aAAc;QAAAH,QAAA,EAAC;MAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5C,CAAC,eACN1B,OAAA;MAAKoB,SAAS,EAAEvB,MAAM,CAAC8B,cAAe;MAAAR,QAAA,EACnCf,UAAU,CAACwB,GAAG,CAACb,QAAQ,iBACtBf,OAAA,CAACF,cAAc;QACbW,UAAU,EAAEM,QAAQ,CAACN,UAAW;QAChCQ,YAAY,EAAEF,QAAQ,CAACE,YAAa;QAEpCY,QAAQ,EAAEd,QAAQ,CAACN,UAAU,KAAKH,gBAAiB;QACnDwB,OAAO,EAAEA,CAAA,KAAMzB,mBAAmB,CAACU,QAAQ,CAACN,UAAU;MAAE,GAFnDM,QAAQ,CAACN,UAAU;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGzB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACnB,EAAA,CAtCIJ,cAA6C;AAAA4B,EAAA,GAA7C5B,cAA6C;AAwCnD,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}