{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjaeho/Desktop/project/Order/frontend/src/Cart/index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport useCartStore from '../store/cart.store';\nimport './style.css';\nimport Payment from '../Pay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Cart() {\n  _s();\n  const {\n    cartList\n  } = useCartStore();\n\n  // 수량을 증가시키는 함수\n  const increaseQuantity = index => {\n    if (index >= 0 && index < cartList.length) {\n      const updatedCartList = [...cartList];\n      updatedCartList[index].productAmount++;\n      updatedCartList[index].newProductPrice = updatedCartList[index].productPrice * updatedCartList[index].productAmount;\n      // 업데이트된 카트 목록을 전역 상태에 적용\n      useCartStore.setState({\n        cartList: updatedCartList\n      });\n    } else {\n      console.error(\"Invalid index:\", index);\n    }\n  };\n\n  // 수량을 감소시키는 함수\n  const decreaseQuantity = index => {\n    if (index >= 0 && index < cartList.length) {\n      const updatedCartList = [...cartList];\n      if (updatedCartList[index].productAmount > 1) {\n        updatedCartList[index].productAmount--;\n        updatedCartList[index].newProductPrice = updatedCartList[index].productPrice * updatedCartList[index].productAmount;\n        // 업데이트된 카트 목록을 전역 상태에 적용\n        useCartStore.setState({\n          cartList: updatedCartList\n        });\n      }\n    } else {\n      console.error(\"Invalid index:\", index);\n    }\n  };\n\n  // 상품을  삭제하는 함수\n  const removeProduct = index => {\n    if (index >= 0 && index < cartList.length) {\n      const updatedCartList = cartList.filter((_, i) => i !== index);\n      // 업데이트된 카트 목록을 전역 상태에 적용\n      useCartStore.setState({\n        cartList: updatedCartList\n      });\n    } else {\n      console.error(\"Invalid index:\", index);\n    }\n  };\n  //payment 결제 창 \n  const payment = () => {\n    return /*#__PURE__*/_jsxDEV(Payment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  };\n  // 총가격 계산 함수\n  const calculateTotalPrice = () => {\n    let totalPrice = 0;\n    cartList.forEach(item => {\n      totalPrice += item.newProductPrice;\n    });\n    return totalPrice;\n  };\n  const cancelAllProducts = () => {\n    // 카트 목록을 빈 배열로 업데이트하여 전체 상품 취소\n    useCartStore.setState({\n      cartList: []\n    });\n  };\n  // 담긴 상품이 없으면 장바구니 랜더링 x\n  if (!cartList.length) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart\",\n      children: [cartList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orderItems\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.productImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), item.productName, item.productTemperature && item.productTemperature && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uC635\\uC158:\", item.productTemperature, \"\\uC0AC\\uC774\\uC988:\", item.productSize]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => decreaseQuantity(index),\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), item.productAmount, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => increaseQuantity(index),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeProduct(index),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.newProductPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail\",\n        children: [\"\\uCD1D\\uC218\\uB7C9: \", cartList.length, \"\\uCD1D\\uAC00\\uACA9: \", calculateTotalPrice()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orderButton\",\n          onClick: payment,\n          children: \"\\uACB0\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"allCancelButton\",\n          onClick: cancelAllProducts,\n          children: \"\\uC804\\uCCB4 \\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Cart, \"hVvG0HMmqC6ruw7X7TqZ7tqhkE8=\", false, function () {\n  return [useCartStore];\n});\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useCartStore","Payment","jsxDEV","_jsxDEV","Fragment","_Fragment","Cart","_s","cartList","increaseQuantity","index","length","updatedCartList","productAmount","newProductPrice","productPrice","setState","console","error","decreaseQuantity","removeProduct","filter","_","i","payment","fileName","_jsxFileName","lineNumber","columnNumber","calculateTotalPrice","totalPrice","forEach","item","cancelAllProducts","children","className","map","src","productImage","productName","productTemperature","productSize","onClick","_c","$RefreshReg$"],"sources":["/Users/jeongjaeho/Desktop/project/Order/frontend/src/Cart/index.tsx"],"sourcesContent":["import React from 'react';\nimport useCartStore from '../store/cart.store';\nimport './style.css';\nimport Payment from '../Pay';\nfunction Cart() {\n  const { cartList } = useCartStore();\n\n  // 수량을 증가시키는 함수\n  const increaseQuantity = (index:number) => {\n    if (index >= 0 && index < cartList.length) {\n      const updatedCartList = [...cartList];\n      updatedCartList[index].productAmount++;\n      updatedCartList[index].newProductPrice = updatedCartList[index].productPrice * updatedCartList[index].productAmount;\n      // 업데이트된 카트 목록을 전역 상태에 적용\n      useCartStore.setState({ cartList: updatedCartList });\n    } else {\n      console.error(\"Invalid index:\", index);\n    }\n  };\n\n  // 수량을 감소시키는 함수\n  const decreaseQuantity = (index:number) => {\n    if (index >= 0 && index < cartList.length) {\n      const updatedCartList = [...cartList];\n      if (updatedCartList[index].productAmount > 1) {\n        updatedCartList[index].productAmount--;\n        updatedCartList[index].newProductPrice = updatedCartList[index].productPrice * updatedCartList[index].productAmount;\n        // 업데이트된 카트 목록을 전역 상태에 적용\n        useCartStore.setState({ cartList: updatedCartList });\n      }\n    } else {\n      console.error(\"Invalid index:\", index);\n    }\n  };\n\n  // 상품을  삭제하는 함수\n  const removeProduct = (index:number) => {\n    if (index >= 0 && index < cartList.length) {\n      const updatedCartList = cartList.filter((_, i) => i !== index);\n      // 업데이트된 카트 목록을 전역 상태에 적용\n      useCartStore.setState({ cartList: updatedCartList });\n    } else {\n      console.error(\"Invalid index:\", index);\n    }\n  };\n//payment 결제 창 \nconst payment=()=>{\n  return(\n    \n      <Payment/>\n  );\n}\n  // 총가격 계산 함수\nconst calculateTotalPrice = () => {\n  let totalPrice = 0;\n  cartList.forEach(item => {\n\n    totalPrice += item.newProductPrice;\n  });\n  return totalPrice;\n};\n\n  const cancelAllProducts = () => {\n    // 카트 목록을 빈 배열로 업데이트하여 전체 상품 취소\n    useCartStore.setState({ cartList: [] });\n  };\n// 담긴 상품이 없으면 장바구니 랜더링 x\n  if(!cartList.length) {\n       return(\n        <></>\n\n       );}\n  return (\n      \n    <>\n    \n    <div className='cart'>\n      {cartList.map((item, index) => (\n       <div className='orderItems' key={index}>\n          <img src={item.productImage} />\n          {item.productName}\n          {item.productTemperature &&item.productTemperature &&(\n          <div>옵션:{item.productTemperature}사이즈:{item.productSize}</div>\n          )}       \n        <div>\n            <button onClick={() => decreaseQuantity(index)}>-</button>\n            {item.productAmount}\n            <button onClick={() => increaseQuantity(index)}>+</button>\n            <button onClick={() => removeProduct(index)}>X</button> {/* 삭제 버튼 */}\n            <div>{item.newProductPrice}</div>\n        </div>\n        </div>\n      ))}\n      <div className='detail'>\n        총수량: {cartList.length}\n        총가격: {calculateTotalPrice()}\n      </div>\n\n      <div className='buttons'>\n      <div className='orderButton' onClick={payment}>결제</div>\n      <div className='allCancelButton' onClick={cancelAllProducts}>전체 취소</div>\n        \n      </div>\n    </div>\n    \n    </>\n  );\n}\n\nexport default Cart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}